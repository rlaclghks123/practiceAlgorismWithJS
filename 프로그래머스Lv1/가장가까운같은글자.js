//  각 글자들을 왼쪽부터 오른쪽으로 읽어 나가면서 다음과 같이 진행할 수 있습니다.
// b는 처음 나왔기 때문에 자신의 앞에 같은 글자가 없습니다. 이는 -1로 표현합니다.
// a는 처음 나왔기 때문에 자신의 앞에 같은 글자가 없습니다. 이는 -1로 표현합니다.
// n은 처음 나왔기 때문에 자신의 앞에 같은 글자가 없습니다. 이는 -1로 표현합니다.
// a는 자신보다 두 칸 앞에 a가 있습니다. 이는 2로 표현합니다.
// n도 자신보다 두 칸 앞에 n이 있습니다. 이는 2로 표현합니다.
// a는 자신보다 두 칸, 네 칸 앞에 a가 있습니다. 이 중 가까운 것은 두 칸 앞이고, 이는 2로 표현합니다.
// 따라서 최종 결과물은 [-1, -1, -1, 2, 2, 2]가 됩니다.
// 문자열 s이 주어질 때, 위와 같이 정의된 연산을 수행하는 함수 solution을 완성해주세요.

// 1. s를 순회하면서 해당 단어 앞까지 slice 한다.
// 2. 만약 해당 단어 앞까지 slice한 문자열에 해당단어가 포함되어 있지 않다면 -1을
// 3. 만약 해당 단어 앞까지 slice한 문자열에 해당단어가 포함되어 있다면 해당단어의 idx에서 해당단어가 slice한 문자열에서 뒤에서부터 idx값을 빼준다.

function solution(s) {
  const answer = [...s].map((word, idx) => {
    const sliced = s.slice(0, idx);
    if (sliced.indexOf(word) === -1) return -1;
    return idx - sliced.lastIndexOf(word);
  });

  return answer;
}
