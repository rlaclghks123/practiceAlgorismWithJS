// 크기가 모두 같으며, 1번 상자부터 n번 상자까지 번호가 증가하는 순서대로 컨테이너에 놓여 영재에게 전달
// 컨테이너 벨트는 한방향으로 진행되서 1번부터 내릴수 있습니다.
// 하지만 기사님이 배달하는 순서와 택배상자가 실린 순서가 맞지 않아 배달에 차질이 생김
// 택배 기사님이 알려준 순서에 맞게 영재가 택배상자에 실어야 함
// 벨트의 맨 앞에 놓인 상자가 현재 트럭에 실어야 하는 순서가 아니라면 그 상자를 트럭에 실을 순서가 될 때까지 보조 컨테이너 벨트에 보관
// 보조 컨테이너 벨트는 앞뒤로 이동이 가능, 맨앞 상자만 꺼낼 수 있음(가장 마지막에 넣은 놈부터 꺼냄)
// 보조 컨테이너 벨트를 이용해도 기사님이 원하는 순서대로 못싣는다면 더이상 싣지않음
// order는 1,000,000 => 1중 for문만 가능하다.

function solution(order) {
  const stack = [];
  let index = 0;

  // 1부터 order.length 까지 상자를 받는다.
  for (let i = 1; i <= order.length; i++) {
    // stack에 값을 담아준다.
    stack.push(i);

    //stack에 값이 있으면서 stack의 peek값이 택배기사님이 알려준 순서대로라면 index값을 증가시켜주고, stack에서 pop 한다.
    while (stack.length > 0 && stack[stack.length - 1] === order[index]) {
      index++;
      stack.pop();
    }
  }
  // index값을 출력한다.
  return index;
}

solution([4, 3, 1, 2, 5]); // 2   => 4, 3
// 12345 => 4, 3 => 2
// 보조 : 123  12

solution([5, 4, 3, 2, 1]); // 5
// 12345  5, 4, 3, 2, 1
// 보조 : 1234 123 12 1
